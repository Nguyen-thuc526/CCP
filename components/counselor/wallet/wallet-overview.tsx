"use client"

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Wallet, TrendingUp, Clock, ArrowDownRight, Info } from "lucide-react"
import type { WalletData } from "@/types/wallet"

const formatCurrency = (amount: number) => {
  return new Intl.NumberFormat("vi-VN", {
    style: "currency",
    currency: "VND",
  }).format(amount)
}

export function WalletOverview({
  walletData,
}: {
  walletData: WalletData | null
}) {
  if (!walletData) return null

  return (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">S·ªë d∆∞ hi·ªán t·∫°i</CardTitle>
            <Wallet className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">{formatCurrency(walletData.balance)}</div>
            <p className="text-xs text-muted-foreground">
              C√≥ th·ªÉ r√∫t: {formatCurrency(walletData.availableForWithdrawal)}
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Thu nh·∫≠p th√°ng n√†y</CardTitle>
            <TrendingUp className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{formatCurrency(walletData.monthlyEarnings)}</div>
            <p className="text-xs text-muted-foreground">+12.5% so v·ªõi th√°ng tr∆∞·ªõc</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Ch·ªù thanh to√°n</CardTitle>
            <Clock className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-orange-600">{formatCurrency(walletData.pendingPayments)}</div>
            <p className="text-xs text-muted-foreground">S·∫Ω ƒë∆∞·ª£c chuy·ªÉn v√†o v√≠ sau 24h t·ª´ l√∫c booking</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">ƒê√£ r√∫t</CardTitle>
            <ArrowDownRight className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{formatCurrency(walletData.totalWithdrawn)}</div>
            <p className="text-xs text-muted-foreground">T·ªïng s·ªë ti·ªÅn ƒë√£ r√∫t</p>
          </CardContent>
        </Card>
      </div>

      {walletData.pendingPayments > 0 && (
        <Card className="border-blue-200 bg-blue-50">
          <CardContent className="pt-6">
            <div className="flex items-start gap-3">
              <Info className="h-5 w-5 text-blue-600 mt-0.5 flex-shrink-0" />
              <div className="space-y-2">
                <h4 className="font-medium text-blue-900">Th√¥ng tin v·ªÅ thanh to√°n</h4>
                <p className="text-sm text-blue-800 leading-relaxed">
                  Ti·ªÅn t·ª´ c√°c bu·ªïi t∆∞ v·∫•n s·∫Ω ƒë∆∞·ª£c t·ª± ƒë·ªông chuy·ªÉn v√†o v√≠ c·ªßa b·∫°n sau <strong>24 gi·ªù</strong> k·ªÉ t·ª´ th·ªùi
                  gian booking ƒë∆∞·ª£c th·ª±c hi·ªán. ƒêi·ªÅu n√†y ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng d·ªãch v·ª• v√† b·∫£o v·ªá quy·ªÅn l·ª£i c·ªßa c·∫£ hai b√™n.
                </p>
                <p className="text-xs text-blue-700">
                  üí° B·∫°n c√≥ th·ªÉ theo d√µi tr·∫°ng th√°i c√°c kho·∫£n thanh to√°n trong m·ª•c "L·ªãch s·ª≠ giao d·ªãch" b√™n d∆∞·ªõi.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  )
}
